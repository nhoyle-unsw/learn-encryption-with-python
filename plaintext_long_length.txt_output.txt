====== Start
Plaintext file contents - [ and ] are not part of the file:
[Hello, Alice! How are you today?
I'm well, thanks, before you ask me.

I'm sure this implementaiton is not secure, it is only for learning and demonstration purposes. You know what they say: "Never roll your own crypto!"

How about this RSA algorithm for encrypting and decrypting arbitrary text files of any length?
Amaizing, huh?

Here are some crazy characters:

~!@#$%^&*()_+`1234567890-={}|[]\:";'<>?,./

And some ascii art:

Art by Shanaka Dias
                       .-.
                      |_:_|
                     /(_Y_)\
.                   ( \/M\/ )
 '.               _.'-/'-'\-'._
   ':           _/.--'[[[[]'--.\_
     ':        /_'  : |::"| :  '.\
       ':     //   ./ |oUU| \.'  :\
         ':  _:'..' \_|___|_/ :   :|
           ':.  .'  |_[___]_|  :.':\
            [::\ |  :  | |  :   ; : \
             '-'   \/'.| |.' \  .;.' |
             |\_    \  '-'   :       |
             |  \    \ .:    :   |   |
             |   \    | '.   :    \  |
             /       \   :. .;       |
            /     |   |  :__/     :  \\
           |  |   |    \:   | \   |   ||
          /    \  : :  |:   /  |__|   /|
      snd |     : : :_/_|  /'._\  '--|_\
          /___.-/_|-'   \  \
                         '-'
https://www.asciiart.eu/movies/star-wars]
======
Encoded contents - [ and ] are not part of the file:
[172201208208211144132165208205
199201133132172211219132197214
201132221211217132216211200197
221163110173139209132219201208
208144132216204197210207215144
132198201202211214201132221211
217132197215207132209201146110
110173139209132215217214201132
216204205215132205209212208201
209201210216197205216211210132
205215132210211216132215201199
217214201144132205216132205215
132211210208221132202211214132
208201197214210205210203132197
210200132200201209211210215216
214197216205211210132212217214
212211215201215146132189211217
132207210211219132219204197216
132216204201221132215197221158
132134178201218201214132214211
208208132221211217214132211219
210132199214221212216211133134
110110172211219132197198211217
216132216204205215132182183165
132197208203211214205216204209
132202211214132201210199214221
212216205210203132197210200132
200201199214221212216205210203
132197214198205216214197214221
132216201220216132202205208201
215132211202132197210221132208
201210203216204163110165209197
205222205210203144132204217204
163110110172201214201132197214
201132215211209201132199214197
222221132199204197214197199216
201214215158110110226133164135
136137194138142140141195143196
149150151152153154155156157148
145161223225224191193192158134
159139160162163144146147110110
165210200132215211209201132197
215199205205132197214216158110
110165214216132198221132183204
197210197207197132168205197215
110132132132132132132132132132
132132132132132132132132132132
132132132132146145146110132132
132132132132132132132132132132
132132132132132132132132132132
224195158195224110132132132132
132132132132132132132132132132
132132132132132132132147140195
189195141192110146132132132132
132132132132132132132132132132
132132132132132140132192147177
192147132141110132139146132132
132132132132132132132132132132
132132132195146139145147139145
139192145139146195110132132132
139158132132132132132132132132
132132132195147146145145139191
191191191193139145145146192195
110132132132132132139158132132
132132132132132132147195139132
132158132224158158134224132158
132132139146192110132132132132
132132132139158132132132132132
147147132132132146147132224211
185185224132192146139132132158
192110132132132132132132132132
132139158132132195158139146146
139132192195224195195195224195
147132158132132132158224110132
132132132132132132132132132132
139158146132132146139132132224
195191195195195193195224132132
158146139158192110132132132132
132132132132132132132132191158
158192132224132132158132132224
132224132132158132132132159132
158132192110132132132132132132
132132132132132132132139145139
132132132192147139146224132224
146139132192132132146159146139
132224110132132132132132132132
132132132132132132224192195132
132132132192132132139145139132
132132158132132132132132132132
224110132132132132132132132132
132132132132132224132132192132
132132132192132146158132132132
132158132132132224132132132224
110132132132132132132132132132
132132132132224132132132192132
132132132224132139146132132132
158132132132132192132132224110
132132132132132132132132132132
132132132147132132132132132132
132192132132132158146132146159
132132132132132132132224110132
132132132132132132132132132132
132147132132132132132224132132
132224132132158195195147132132
132132132158132132192192110132
132132132132132132132132132132
224132132224132132132224132132
132132192158132132132224132192
132132132224132132132224224110
132132132132132132132132132132
147132132132132192132132158132
158132132224158132132132147132
132224195195224132132132147224
110132132132132132132215210200
132224132132132132132158132158
132158195147195224132132147139
146195192132132139145145224195
192110132132132132132132132132
132132147195195195146145147195
224145139132132132192132132192
110132132132132132132132132132
132132132132132132132132132132
132132132132132132139145139110
204216216212215158147147219219
219146197215199205205197214216
146201217147209211218205201215
147215216197214145219197214215
]
======
RSA Encrypted contents using public key 65537 - [ and ] are not part of the file:
[153993868398685821414020220200
931945730961823099956807270267
487852773892009187752813440763
725226121014721883661425941255
424450319291101780962011270973
400592866019793852498427468744
355446584358156190716645769710
807639261696732283870822350386
822365310341980696334103467135
90238373718337629775038695910
532957946650901314225011955179
186146162484883287814614545543
374158794021659383985127354525
899518174942405465952747861533
192083199583264963281492190829
58579180050098599496414251761
890336032287409476338255005644
539862562476072062659974507090
980319713090915931570475973547
449428551763053542835616760720
467106998500671046615850562031
283627297972436157263435987779
447442882322594293664276490204
484165818513342689535952907173
718663314314629503726636342513
825565127334675558044177420802
276867373937440715386525375631
614048711065785256086195911315
596793869963027395673463619782
356732395568027248953279896843
288442837471841992413299410185
964960299569105495952269742071
269895368695329350318129007004
919930899442373007577040843841
678683322065567544196279542520
406740407663544583196047524426
86731387059079718844805433623
191948766377701166110498965547
462702083406092761105653735644
758859839993412484456303165183
289425325970931728835146691394
665310067799556764013728775277
401371882558722909405084261436
373691078663870569147375522255
761304444173012412722033686436
171505251774519199456733380957
787375494031021658608821170458
867301635119200629488363818420
787375494031021658608821170458
787375494031021658608821170458
967916494057942071378812116456
787375494031021658608821170458
586790894341178187829732541003
156538549505212503369422648572
787375494031021658608821170458
6393113912105140185029672882
960722667007099672721753959969
787375494031021658608821170458
529744945178572492478708542591
773182303605781485892525270245
410081930044872150586357741151
43105580921790762069967979548
769594784527194059447159202593
9740803199391677232217609928
654937997171021867828031459434
278252645885916800883743241591
388255713270179345504857337546
250033437105621007936633870826
603524580533603682232302962672
338512048205331035866754520371
373003528824758457265298687569
271672136586896010833247282277
213591480231765632976430551957
809549514057137944143669716175
787375494031021658608821170458
204561090878503153949120191451
145110150730762868225035443558
813834170344780874908772321608
518374407390366459236286157214
283149753192085191251390151954
905104983922470169289770356059
942211520623081324184582445504
348928735582949178320939125218
464890916992450617668249174323
64363560013704274113210825468
814650817053498475614786504429
669108872594322037041649258215
940194248100377288983974966619
848349438722842194413594754196
889328910282705318728041855874
114027470844748345246938247104
163612809437490209893851679697
28656958155309949365916118584
171505251774519199456733380957
900330303326127104568010297619
907117688447646062356249674248
466337538233504328316578625187
787375494031021658608821170458
842832965314677107728202805266
444552309836522357646014597742
788201170379510727170390084626
787375494031021658608821170458
285225448143066606072925799368
976785104501486197932146085348
678719391535374031713020792641
787375494031021658608821170458
350146996851620172738115395031
466495133158384169142406134906
531006339744935667067780286399
787375494031021658608821170458
388598398130908901922692956521
497939400568218635396767066729
627863182752079827051989834999
202293044266126770586052644946
12126759959360421545853874608
152428613476192842037396954816
645090624970816014087539816247
373003528824758457265298687569
966610433562737560472352947396
867516704349269625398982674438
171505251774519199456733380957
787375494031021658608821170458
214335957133052643696448512233
835111002783925828508642278189
981766228097284051894089050222
678556283684983307072675068122
192173328660965096910698679222
]
======
RSA Decrypted contents using private key 282558858218830016898995928393 -[ and ] are not part of the file:
[Hello, Alice! How are you today?
I'm well, thanks, before you ask me.

I'm sure this implementaiton is not secure, it is only for learning and demonstration purposes. You know what they say: "Never roll your own crypto!"

How about this RSA algorithm for encrypting and decrypting arbitrary text files of any length?
Amaizing, huh?

Here are some crazy characters:

~!@#$%^&*()_+`1234567890-={}|[]\:";'<>?,./

And some ascii art:

Art by Shanaka Dias
                       .-.
                      |_:_|
                     /(_Y_)\
.                   ( \/M\/ )
 '.               _.'-/'-'\-'._
   ':           _/.--'[[[[]'--.\_
     ':        /_'  : |::"| :  '.\
       ':     //   ./ |oUU| \.'  :\
         ':  _:'..' \_|___|_/ :   :|
           ':.  .'  |_[___]_|  :.':\
            [::\ |  :  | |  :   ; : \
             '-'   \/'.| |.' \  .;.' |
             |\_    \  '-'   :       |
             |  \    \ .:    :   |   |
             |   \    | '.   :    \  |
             /       \   :. .;       |
            /     |   |  :__/     :  \\
           |  |   |    \:   | \   |   ||
          /    \  : :  |:   /  |__|   /|
      snd |     : : :_/_|  /'._\  '--|_\
          /___.-/_|-'   \  \
                         '-'
https://www.asciiart.eu/movies/star-wars]
======
Checking if original plaintext matches encrypted + decrypted result:
original file: [Hello, Alice! How are you today?
I'm well, thanks, before you ask me.

I'm sure this implementaiton is not secure, it is only for learning and demonstration purposes. You know what they say: "Never roll your own crypto!"

How about this RSA algorithm for encrypting and decrypting arbitrary text files of any length?
Amaizing, huh?

Here are some crazy characters:

~!@#$%^&*()_+`1234567890-={}|[]\:";'<>?,./

And some ascii art:

Art by Shanaka Dias
                       .-.
                      |_:_|
                     /(_Y_)\
.                   ( \/M\/ )
 '.               _.'-/'-'\-'._
   ':           _/.--'[[[[]'--.\_
     ':        /_'  : |::"| :  '.\
       ':     //   ./ |oUU| \.'  :\
         ':  _:'..' \_|___|_/ :   :|
           ':.  .'  |_[___]_|  :.':\
            [::\ |  :  | |  :   ; : \
             '-'   \/'.| |.' \  .;.' |
             |\_    \  '-'   :       |
             |  \    \ .:    :   |   |
             |   \    | '.   :    \  |
             /       \   :. .;       |
            /     |   |  :__/     :  \\
           |  |   |    \:   | \   |   ||
          /    \  : :  |:   /  |__|   /|
      snd |     : : :_/_|  /'._\  '--|_\
          /___.-/_|-'   \  \
                         '-'
https://www.asciiart.eu/movies/star-wars]
encr and decr: [Hello, Alice! How are you today?
I'm well, thanks, before you ask me.

I'm sure this implementaiton is not secure, it is only for learning and demonstration purposes. You know what they say: "Never roll your own crypto!"

How about this RSA algorithm for encrypting and decrypting arbitrary text files of any length?
Amaizing, huh?

Here are some crazy characters:

~!@#$%^&*()_+`1234567890-={}|[]\:";'<>?,./

And some ascii art:

Art by Shanaka Dias
                       .-.
                      |_:_|
                     /(_Y_)\
.                   ( \/M\/ )
 '.               _.'-/'-'\-'._
   ':           _/.--'[[[[]'--.\_
     ':        /_'  : |::"| :  '.\
       ':     //   ./ |oUU| \.'  :\
         ':  _:'..' \_|___|_/ :   :|
           ':.  .'  |_[___]_|  :.':\
            [::\ |  :  | |  :   ; : \
             '-'   \/'.| |.' \  .;.' |
             |\_    \  '-'   :       |
             |  \    \ .:    :   |   |
             |   \    | '.   :    \  |
             /       \   :. .;       |
            /     |   |  :__/     :  \\
           |  |   |    \:   | \   |   ||
          /    \  : :  |:   /  |__|   /|
      snd |     : : :_/_|  /'._\  '--|_\
          /___.-/_|-'   \  \
                         '-'
https://www.asciiart.eu/movies/star-wars]
Both Match!
====== End


** Process exited - Return Code: 0 **
Press Enter to exit terminal